Plan/Status
===========

-> create a class that can create template from text (done)
-> create an extended that can create template from existing file (done)
-> generate frame objects based on available frame strings in frame directories (done)
-> create object from a frame created in a text file (done)
-> Later, generate code for the frame based on the class
-> Its a self-learning auto code generator (far-future)
-> enable frame_string to contain frame class name



Purpose
=======

-> Enable developing own language to program,
-> This will not only create code, but also a structure,
-> Turn every directory in a structure
-> 



Tests
=====
-> Next task is to get started with test writing for the class (done)
-> 25 tests passing (october 20, 2019) (ongoing)


Things to remember while creating testcase
------------------------------------------
-> each unit has to be independent
-> test names should be as descriptive as possible
-> run test suite before and after work so nothing breaks
-> while debugging projects, it is necessary to add a test
   pinpointing that bug, considered most important pieces in code
-> keep tests as fast as possible
-> if test is slow, keep them in separate place and run 
   as scheduled task to avoid delay in development


TODO
----
- how to define a class on the fly > no need: will create class object on the fly (done)
- think about how to utilize the objects and plan thorougly before
  writing more codes


Terminology
-----------

frame string
    a string that that can be used as a template for automating text
    generation

frame file (.ff)
    a text file that contains frame string

frame user param (.fup)
    a file that contains inputs for generating text based on a specific
    template












